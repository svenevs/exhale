sudo: false

branches:
  # Other branches receive a Pull Request build.
  only:
    - master

# Sphinx version testing done only on Linux (fastest boot / install times).
# Each test must specify `python: X.Y` and `env: PY=X.Y SPHINX_VERSION=X.Y.Z`.
# The `tox.ini` file checks the environment variable `SPHINX_VERSION` as an override
# available to test against a specific version of Sphinx rather than the latest version.
# The PY environment variable is just to make the Travis CI user interface a little more
# straightforward which test is which.  See examples below under matrix:include:.
linux_specifications: &linux_specs
  os: linux
  language: python
  addons:
    apt:
      packages:
        # The dependencies for compiling doxygen from source.
        - flex
        - bison
  install:
    # NOTE: doxygen doesn't seem to work with latest cmake // ninja :/
    - pip install cmake
    - mkdir doxygen && cd doxygen
    - curl -LO https://github.com/doxygen/doxygen/archive/Release_1_8_15.tar.gz
    - tar -xf Release_1_8_15.tar.gz
    - cd doxygen-Release_1_8_15
    - mkdir build && cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../..
    - make -j
    - make install
    - cd $(git rev-parse --show-toplevel)
    - export PATH="$PWD/doxygen/bin:$PATH"
    - pip install -U pip setuptools tox codecov
  script:
    - doxygen --version
    - tox -e py -- --cov-report xml:coverage.xml --cov
  after_success:
    - codecov -X gcov -f coverage.xml --name "$(echo "linux-py@$PY-sphinx@$SPHINX_VERSION")"

matrix:
  allow_failures:
    - env: ALLOW_ME_TO=FAIL
  include:
    ####################################################################################
    # Linux :: Python :: 2.7                                                           #
    ####################################################################################
    - <<: *linux_specs
      python: "2.7"
      env: PY=2.7 SPHINX_VERSION=1.8.5 BREATHE_VERSION=4.12.0
    ####################################################################################
    # Linux :: Python :: 3.6                                                           #
    ####################################################################################
    - <<: *linux_specs
      python: "3.6"
      env: PY=3.6 SPHINX_VERSION=1.8.5 BREATHE_VERSION=4.12.0
      # Use latest sphinx / breathe (see also: tox.ini)
    - <<: *linux_specs
      python: "3.6"
      env: PY=3.6
    ####################################################################################
    # OSX :: Python :: 2.7                                                             #
    ####################################################################################
    - os: osx
      language: generic
      env: PY=2.7 SPHINX_VERSION=1.8.5 BREATHE_VERSION=4.12.0 HOMEBREW_NO_AUTO_UPDATE=1
      before_install:
        # Something strange about final step of install gives exit code != 1 but the
        # installation appears to work?
        - brew install python@2 || true
      install:
        - brew install doxygen
        - /usr/local/bin/pip install -U tox codecov
      script:
        - doxygen --version
        - /usr/local/bin/python2 --version
        - /usr/local/bin/python2 -m tox -e py -- --cov-report xml:coverage.xml --cov
      after_success:
        - codecov -X gcov -f coverage.xml --name osx_py2.7
    ####################################################################################
    # OSX :: Python :: 3.6                                                             #
    ####################################################################################
    - os: osx
      language: generic
      # Use latest sphinx / breathe (see also: tox.ini)
      env: PY=3.6 HOMEBREW_NO_AUTO_UPDATE=1
      before_install:
        - brew upgrade python || true
      install:
        - brew install doxygen
        - /usr/local/bin/pip3 install -U tox codecov
      script:
        - doxygen --version
        - /usr/local/bin/python3 --version
        - /usr/local/bin/python3 -m tox -e py -- --cov-report xml:coverage.xml --cov
      after_success:
        - codecov -X gcov -f coverage.xml --name osx_py3.6
    ####################################################################################
    # Flake8                                                                           #
    ####################################################################################
    - os: linux
      language: python
      env: TEST=flake8
      python: "3.6"
      install:
        - pip install -U tox
      script:
        - tox -e flake8
    ####################################################################################
    # Docs and Linkcheck                                                               #
    ####################################################################################
    - os: linux
      addons:
        apt:
          packages:
            - graphviz
      language: python
      python: "3.6"
      env: TEST=docs_linkcheck
      install:
        - pip install -U tox
      script:
        - tox -e docs,linkcheck
    ####################################################################################
    # testing/projects Code Validation                                                 #
    ####################################################################################
    - os: linux
      dist: xenial
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
            - g++-8
            - gfortran-8
            - python3
            - python3-venv
            - cmake
      language: cpp  # mostly ;)
      env: TEST=testing/projects
      before_install:
        - export CC=gcc-8
        - export CXX=g++-8
        - export FC=gfortran-8
      install:
        # I don't want to require sudo because I don't want to wait ;)
        - python3 -m venv venv
        - source venv/bin/activate
        - pip install -U pip codecov gcovr
        # cpp_long_names test runs code from testing/tests/cpp_long_names.py, so we need
        # to install the runtime dependencies of Exhale's Python tests.
        - pip install -r requirements.txt -r requirements-dev.txt
      script:
        - cd testing/projects
        - mkdir build && cd build
        - cmake --version
        - cmake ..
        - make -j
        - make coverage-xml
      after_success:
        - codecov --name linux_cxx
