[tox]
envlist = py, flake8

[testenv]
passenv = PYTHONWARNINGS TOXENV CI
# See TODO below, skipping install since I don't know what is going on...
# usedevelop = true
skip_install = true
# NOTE: environment variables *MUST* include the `==`, e.g.,
#       SPHINX_VERSION="==3.0.0" tox -e py
# This way, if the variable is not set, it uses the latest version.
deps =
    # TODO: drop this when sphinx 3.x is dropped.
    # https://github.com/sphinx-doc/sphinx/issues/10291
    Jinja2<3.1
    # requirements for exhale
    sphinx{env:SPHINX_VERSION:}
    breathe{env:BREATHE_VERSION:>=4.32.0}
    beautifulsoup4
    # NOTE: for dev convenience, see https://github.com/svenevs/exhale/issues/131
    lxml>=4.6.4
    six
    # testing requirements
    # NOTE: see .github/actions/testing_projects.yaml, updates here need to go there.
    pytest
    pytest-raises>=0.10
    # testing coverage plugin (`tox -e py -- --cov-report xml:coverage.xml --cov`)
    pytest-cov
    # this is just because I like to have color in my debugger...
    ipdb
commands =
    # TODO: waiting on breathe>=4.32.0 release; wheel needed for pip install breathe
    {envpython} -m pip install wheel
    {envpython} -m pip install --no-build-isolation git+https://github.com/michaeljones/breathe.git
    # end TODO
    {envpython} -c 'import sphinx; print("\033[36;1mSphinx version: %s\033[0m" % sphinx.__version__)'
    {envpython} -c 'import breathe; print("\033[36;1mBreathe version: %s\033[0m" % breathe.__version__)'
    {envpython} -c 'import sys; print("\033[36;1mPython version: %d.%d.%d\033[0m" % sys.version_info[0:3])'
    pytest . {posargs}

[testenv:flake8]
skip_install = true
deps =
    flake8
    flake8-docstrings
    flake8-import-order
    pep8-naming
    flake8-colors
commands =
    flake8 {posargs} setup.py testing/
# TODO: many intentional flake8 failures in exhale/
#    flake8 {posargs} setup.py exhale/ testing/

[testenv:docs]
changedir = docs
deps =
    -rdocs/requirements.txt
commands =
    sphinx-build -W -n -b html -d {envtmpdir}/doctrees . {envtmpdir}/html

[testenv:linkcheck]
changedir = docs
deps =
    -rdocs/requirements.txt
commands =
    sphinx-build -W -b linkcheck -d {envtmpdir}/doctrees . {envtmpdir}/linkcheck

[testenv:dist]
deps =
    build[virtualenv]
    twine
skip_install = true
commands =
    # Builds sdist and then wheel from sdist.
    {envpython} -m build .
    # Validate the markup
    twine check dist/*

[testenv:clean]
whitelist_externals =
    find
    rm
deps =
skip_install = true
commands =
    rm -rf build/
    rm -rf dist/
    rm -rf exhale.egg-info/
    rm -rf .eggs/
    rm -rf pip-wheel-metadata/
    find . -name "*.pyc" -exec rm -f \{\} +
    find . -name "__pycache__" -type d -exec rm -rf \{\} +
