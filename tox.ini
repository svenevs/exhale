[tox]
envlist = py, flake8

# TODO: is there a way to just somehow do
# deps = sphinx if NOT env:SPHINX_VERSION
#               else sphinx==SPHINX_VERSION
# ?
# I couldn't figure out how to conditionally exclude the == signs without making
# the environment variable SPHINX_VERSION='==X.Y.Z' which is ridiculous.
#
# Problem right now is I need to remember to update this variable...
[sphinx]
latest_version = 1.8.0

[testenv]
# Required to be able to send coverage reports from Travis to codecov
passenv = PYTHONWARNINGS TOXENV CI TRAVIS TRAVIS_*
usedevelop = True
# Limitation: requirements.txt has sphinx specification, so doing
#   sphinx==X.Y.Z
#   -rrequirements.txt
#   ...
# under `deps` breaks.  The workaround here is to install the version specified in the
# environment variable SPHINX_VERSION, or choose 'latest_version' specified above.
# Then `pip install -r` in the `commands` section.  Which includes much more output now
# but I need to test different versions of Sphinx so meh.
deps =
    sphinx=={env:SPHINX_VERSION:{[sphinx]latest_version}}
commands =
    pip install -q -r requirements.txt
    pip install -q -r requirements-dev.txt
    pytest . {posargs}
    {envpython} -c 'import sphinx; print("Tested against Sphinx version %s." % sphinx.__version__)'
    {envpython} -c 'import sys; print("Tested against Python version %d.%d.%d." % sys.version_info[0:3])'

[testenv:flake8]
skip_install = true
deps =
    flake8
    flake8-docstrings
    flake8-import-order
    pep8-naming
    flake8-colors
commands =
    flake8 {posargs} setup.py testing/
# TODO: many intentional flake8 failures in exhale/
#    flake8 {posargs} setup.py exhale/ testing/

[testenv:docs]
changedir = docs
deps =
    -rrequirements-docs.txt
commands =
    sphinx-build -W -n -b html -d {envtmpdir}/doctrees . {envtmpdir}/html

[testenv:linkcheck]
changedir = docs
deps =
    -rrequirements-docs.txt
commands =
    sphinx-build -W -b linkcheck -d {envtmpdir}/doctrees . {envtmpdir}/linkcheck

[testenv:dist]
deps = readme_renderer
skip_install = true
commands =
    # Checks RST for uploading to PyPi
    {envpython} setup.py check -r -s
    {envpython} setup.py sdist
    {envpython} setup.py bdist_wheel --universal

[testenv:clean]
whitelist_externals =
    find
    rm
deps =
skip_install = true
commands =
    rm -rf build/
    rm -rf dist/
    rm -rf exhale.egg-info/
    rm -rf .eggs/
    find . -name "*.pyc" -exec rm -f \{\} +
    find . -name "__pycache__" -type d -exec rm -rf \{\} +
